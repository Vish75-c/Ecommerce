if(collection&&collection.toLocaleLowerCase()!=='all'){
            query.collections=collection;
        }
        if(category&&category.toLocaleLowerCase()!=='all'){
            query.category=category
        }
        if(brand){
            query.brand={$in:material.split(",")}
        }
        if(material){
            query.material={$in:material.split(",")}
        }
        if(size){
            query.sizes={$in:size.split(",")}
        }
        if(color){
            query.colors={$in:color.split(",")}
        }
        if(gender){
            query.gender=gender;
        }
        if(minPrice||maxPrice){
            query.price={}
            if(minPrice)query.price.$gte=Number(minPrice)
            if(maxPrice)query.price.$lte=Number(maxPrice)
        }
        if(search){
            query.$or=[
                {name:{$regex:search,$options:"i"}},
                {description:{$regex:search,$options:"i"}},
            ];
        }
        // sort logic
        const sort={}
        if(sortBy){
            switch(sortBy){
                case "priceAsc":
                sort:{price:1};break;
                case "priceDesc":
                sort:{price:-1};break;
                case "popularity",
                sort:{rating:-1}break;
                default: break;
            }
        }
        let products=await productmodel.find(query).sort(sort).limit(Number(limit)||0)
        res.json(products)